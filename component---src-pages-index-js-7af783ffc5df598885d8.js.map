{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","props","_this","_React$Component","call","this","scrollToContent","e","separator","current","scrollIntoView","block","behavior","React","createRef","render","_this2","_this$props$data","data","_this$props$data$post","posts","edges","desktop","bgDesktop","resize","src","tablet","bgTablet","mobile","bgMobile","facebook","site","siteMetadata","backgrounds","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","_layouts__WEBPACK_IMPORTED_MODULE_5__","Consumer","theme","_components_Hero__WEBPACK_IMPORTED_MODULE_7__","onCtaClick","backgroundImg","hero","background","title","ctaContent","FaArrowDown","ref","className","_components_Blog__WEBPACK_IMPORTED_MODULE_6__","_components_Seo__WEBPACK_IMPORTED_MODULE_8__","styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default","styleId","css","Component","propTypes","PropTypes","object","isRequired","query"],"mappings":"qPAUMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAIFC,gBAAkB,SAAAC,GAChBL,EAAKM,UAAUC,QAAQC,eAAe,CAAEC,MAAO,QAASC,SAAU,YAJlEV,EAAKM,UAAYK,IAAMC,YAFNZ,8BASnBa,kBAAS,IAAAC,EAAAX,KAAAY,EAiBHZ,KAAKJ,MAfPiB,KAFKC,EAAAF,EAGHG,MAASC,MAAOD,OAHb,IAAAD,EAGqB,GAHrBA,EAKcG,EALdL,EAIHM,UACEC,OAAUC,IAGKC,EARdT,EAOHU,SACEH,OAAUC,IAGKG,EAXdX,EAUHY,SACEL,OAAUC,IAGMK,EAdfb,EAaHc,KACEC,aAAgBF,SAKhBG,EAAc,CAClBX,UACAI,SACAE,UAGF,OACEM,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACE,EAAA,aAAaC,SAAd,KACG,SAAAC,GAAK,OACJN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEC,WAAY1B,EAAKV,gBACjBqC,cAAeH,EAAMI,KAAKC,WAC1BZ,YAAaA,EACbO,MAAOA,EACPM,MAAM,iBACNC,WAAYC,kBAKlBd,EAAAC,EAAAC,cAAA,MAAIa,IAAK5C,KAAKG,UAAd0C,UAAA,kBAEAhB,EAAAC,EAAAC,cAACE,EAAA,aAAaC,SAAd,KACG,SAAAC,GAAK,OAAIN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAM/B,MAAOA,EAAOoB,MAAOA,MAGvCN,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAKtB,SAAUA,IApBjBI,EAAAC,EAAAC,cAAAiB,EAAAlB,EAAA,CAAAmB,QAAA,YAAAC,IAAA,gDApCkB1C,IAAM2C,WAqE9BxD,EAAUyD,UAAY,CACpBvC,KAAMwC,IAAUC,OAAOC,YAGV5D,YAGR,IAAM6D,EAAK","file":"component---src-pages-index-js-7af783ffc5df598885d8.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { FaArrowDown } from \"react-icons/fa/\";\n\nimport { ThemeContext } from \"../layouts\";\nimport Blog from \"../components/Blog\";\nimport Hero from \"../components/Hero\";\nimport Seo from \"../components/Seo\";\n\nclass IndexPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.separator = React.createRef();\n  }\n\n  scrollToContent = e => {\n    this.separator.current.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\n  };\n\n  render() {\n    const {\n      data: {\n        posts: { edges: posts = [] },\n        bgDesktop: {\n          resize: { src: desktop }\n        },\n        bgTablet: {\n          resize: { src: tablet }\n        },\n        bgMobile: {\n          resize: { src: mobile }\n        },\n        site: {\n          siteMetadata: { facebook }\n        }\n      }\n    } = this.props;\n\n    const backgrounds = {\n      desktop,\n      tablet,\n      mobile\n    };\n\n    return (\n      <React.Fragment>\n        <ThemeContext.Consumer>\n          {theme => (\n            <Hero\n              onCtaClick={this.scrollToContent}\n              backgroundImg={theme.hero.background}\n              backgrounds={backgrounds}\n              theme={theme}\n              title=\"한국에서 가장 섹시한 소년\"\n              ctaContent={FaArrowDown()}\n            />\n          )}\n        </ThemeContext.Consumer>\n\n        <hr ref={this.separator} />\n\n        <ThemeContext.Consumer>\n          {theme => <Blog posts={posts} theme={theme} />}\n        </ThemeContext.Consumer>\n\n        <Seo facebook={facebook} />\n\n        <style jsx>{`\n          hr {\n            margin: 0;\n            border: 0;\n          }\n        `}</style>\n      </React.Fragment>\n    );\n  }\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default IndexPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query IndexQuery {\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts/[0-9]+.*--/\" } }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n          }\n          frontmatter {\n            title\n            category\n            author\n            cover {\n              children {\n                ... on ImageSharp {\n                  fluid(maxWidth: 800, maxHeight: 360) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        facebook {\n          appId\n        }\n      }\n    }\n    bgDesktop: imageSharp(fluid: { originalName: { regex: \"/hero-background/\" } }) {\n      resize(width: 1200, quality: 90, cropFocus: CENTER) {\n        src\n      }\n    }\n    bgTablet: imageSharp(fluid: { originalName: { regex: \"/hero-background/\" } }) {\n      resize(width: 800, height: 1100, quality: 90, cropFocus: CENTER) {\n        src\n      }\n    }\n    bgMobile: imageSharp(fluid: { originalName: { regex: \"/hero-background/\" } }) {\n      resize(width: 450, height: 850, quality: 90, cropFocus: CENTER) {\n        src\n      }\n    }\n  }\n`;\n\n//hero-background\n"],"sourceRoot":""}