{"version":3,"sources":["webpack:///./src/templates/YeppaTemplate.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js"],"names":["YeppaTemplate","props","console","log","_props$data$boi","data","boi","name","bio","categories","social","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","propTypes","PropTypes","shape","string","isRequired","arrayOf","object","yeppaQuery","Seo","facebook","postTitle","frontmatter","title","postDescription","description","postCover","cover","postSlug","fields","slug","config","shortSiteTitle","siteTitle","siteDescription","image","siteImage","url","siteUrl","pathPrefix","react_default","Helmet_default","htmlAttributes","lang","siteLanguage","prefix","content","property","appId","authorTwitterAccount","__webpack_require__","d","__webpack_exports__","components_Seo_Seo"],"mappings":"qLAMMA,iBAAgB,SAAAC,GACpBC,QAAQC,IAAI,SAAUF,GADO,IAAAG,EAWzBH,EARFI,KACEC,IACEC,EALuBH,EAKvBG,KALuBH,EAMvBI,IANuBJ,EAOvBK,WAPuBL,EAQvBM,OAKN,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,cAAMN,EAAN,QAKSP,YAEfA,EAAce,UAAY,CACxBV,KAAMW,IAAUC,MAAM,CACpBX,IAAKU,IAAUC,MAAM,CACnBV,KAAMS,IAAUE,OAAOC,WACvBX,IAAKQ,IAAUE,OAAOC,WACtBV,WAAYO,IAAUI,QAAQJ,IAAUE,QACxCR,OAAQM,IAAUK,YAKjB,IAAMC,EAAU,qHClCjBC,EAAM,SAAAtB,GAAS,IACXI,EAAmBJ,EAAnBI,KAAMmB,EAAavB,EAAbuB,SAERC,IAAcpB,GAAQ,IAAIqB,aAAe,IAAIC,MAC7CC,IAAoBvB,GAAQ,IAAIqB,aAAe,IAAIG,YACnDC,IAAczB,GAAQ,IAAIqB,aAAe,IAAIK,MAC7CC,IAAa3B,GAAQ,IAAI4B,QAAU,IAAIC,KAEvCP,EAAQF,EAAeA,EAAN,MAAqBU,IAAOC,eAAmBD,IAAOE,UACvER,EAAcD,GAAoCO,IAAOG,gBACzDC,EAAQT,GAAwBK,IAAOK,UACvCC,EAAMN,IAAOO,QAAUP,IAAOQ,WAAaX,EAEjD,OACEY,EAAAhC,EAAAC,cAACgC,EAAAjC,EAAD,CACEkC,eAAgB,CACdC,KAAMZ,IAAOa,aACbC,OAAQ,0BAIVL,EAAAhC,EAAAC,cAAA,aAAQc,GACRiB,EAAAhC,EAAAC,cAAA,QAAMN,KAAK,cAAc2C,QAASrB,IAElCe,EAAAhC,EAAAC,cAAA,QAAMsC,SAAS,SAASD,QAAST,IACjCG,EAAAhC,EAAAC,cAAA,QAAMsC,SAAS,WAAWD,QAASvB,IACnCiB,EAAAhC,EAAAC,cAAA,QAAMsC,SAAS,iBAAiBD,QAASrB,IACzCe,EAAAhC,EAAAC,cAAA,QAAMsC,SAAS,WAAWD,QAASX,IACnCK,EAAAhC,EAAAC,cAAA,QAAMsC,SAAS,UAAUD,QAAQ,YACjCN,EAAAhC,EAAAC,cAAA,QAAMsC,SAAS,YAAYD,QAAS1B,EAAS4B,QAE7CR,EAAAhC,EAAAC,cAAA,QAAMN,KAAK,eAAe2C,QAAQ,YAClCN,EAAAhC,EAAAC,cAAA,QACEN,KAAK,kBACL2C,QAASf,IAAOkB,qBAAuBlB,IAAOkB,qBAAuB,OAM7E9B,EAAIR,UAAY,CACdV,KAAMW,IAAUK,OAChBG,SAAUR,IAAUK,OAAOF,YAGdI,QClDf+B,EAAAC,EAAAC,EAAA,sBAAAC","file":"component---src-templates-yeppa-template-js-9e05c142200b4981b55e.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Seo from \"../components/Seo\";\nimport { ThemeContext } from \"../layouts\";\n\nconst YeppaTemplate = props => {\n  console.log('yeppa ', props);\n  const {\n    data: {\n      boi: {\n        name,\n        bio,\n        categories,\n        social,\n      },\n    }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <h2> {name} </h2>\n    </React.Fragment>\n  );\n};\n\nexport default YeppaTemplate;\n\nYeppaTemplate.propTypes = {\n  data: PropTypes.shape({\n    boi: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      bio: PropTypes.string.isRequired,\n      categories: PropTypes.arrayOf(PropTypes.string),\n      social: PropTypes.object,\n    }),\n  })\n};\n\nexport const yeppaQuery = graphql`\n  query YeppaBoiData($name: String!) {\n    boi: yeppasYaml(\n      name: { eq: $name }\n    ) {\n      name\n      bio\n      categories\n      social {\n        instagram\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../content/meta/config\";\n\nconst Seo = props => {\n  const { data, facebook } = props;\n  // TODO make this non reliant on frontmatter\n  const postTitle = ((data || {}).frontmatter || {}).title;\n  const postDescription = ((data || {}).frontmatter || {}).description;\n  const postCover = ((data || {}).frontmatter || {}).cover;\n  const postSlug = ((data || {}).fields || {}).slug;\n\n  const title = postTitle ? `${postTitle} - ${config.shortSiteTitle}` : config.siteTitle;\n  const description = postDescription ? postDescription : config.siteDescription;\n  const image = postCover ? postCover : config.siteImage;\n  const url = config.siteUrl + config.pathPrefix + postSlug;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: config.siteLanguage,\n        prefix: \"og: http://ogp.me/ns#\"\n      }}\n    >\n      {/* General tags */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"fb:app_id\" content={facebook.appId} />\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={config.authorTwitterAccount ? config.authorTwitterAccount : \"\"}\n      />\n    </Helmet>\n  );\n};\n\nSeo.propTypes = {\n  data: PropTypes.object,\n  facebook: PropTypes.object.isRequired\n};\n\nexport default Seo;\n","export { default } from \"./Seo\";\n"],"sourceRoot":""}